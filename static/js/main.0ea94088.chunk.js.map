{"version":3,"sources":["scene.js","components/Card.js","App.js","reportWebVitals.js","reducers/weatherData.js","reducers/searchVal.js","reducers/index.js","index.js"],"names":["listeners","config","document","querySelector","body","removeChild","time","weatherType","console","log","hours","getHours","sunPosition","x","y","z","sunColor","rendererColor","scene","THREE","camera","window","innerWidth","innerHeight","renderer","powerPreference","antialias","stencil","depth","setSize","appendChild","domElement","geometry","material","color","colorWrite","sunGeo","sunMat","sun","position","set","scale","setX","add","godraysEffect","GodRaysEffect","resolutionScale","density","decay","weight","samples","sunLight","renderPass","RenderPass","effectPass","EffectPass","renderToScreen","composer","EffectComposer","addPass","background","fog","attributes","usage","i","count","Math","random","sin","setZ","plane","target","rotateX","precipitation","type","rainGeo","rainMaterial","transparent","rainCount","rain","rainDrop","speed","lightninig","visible","clouds","load","texture","cloudGeo","cloudMaterial","map","p","cloud","rotation","opacity","animate","requestAnimationFrame","children","forEach","floor","intensity","c","render","mouseMoveHandler","e","pageY","pageX","addEventListener","Card","wthr","name","wind","weather","main","sys","visibility","timezone","useState","mode","setMode","className","style","icon","backgroundSize","temp","toFixed","feels_like","temp_min","temp_max","humidity","pressure","Date","sunrise","getMinutes","sunset","deg","src","alt","description","onClick","ArrowDownward","ArrowUpward","App","dispatch","useDispatch","weatherData","useSelector","store","searchVal","loading","setLoading","useEffect","Scene","now","Cloud","onChange","payload","value","city","fetch","then","response","json","toLowerCase","error","Search","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","weatherDataReducer","state","action","searchValReducer","allReducers","combineReducers","createStore","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.0ea94088.chunk.js","sourcesContent":["import * as THREE from \"three\";\r\n// import VDBLoader from \"../node_modules/three/examples/jsm/loaders/VOXLoader\";\r\n\r\nimport {\r\n  GodRaysEffect,\r\n  EffectComposer,\r\n  RenderPass,\r\n  EffectPass,\r\n} from \"postprocessing\";\r\n\r\nconst listeners = {};\r\n\r\nconst initScene = (config) => {\r\n  document.querySelector(\"canvas\") &&\r\n    document.body.removeChild(document.querySelector(\"canvas\"));\r\n\r\n  //constants\r\n  const { time, weatherType } = config;\r\n  console.log(\"!!!\", weatherType);\r\n  const hours = time.getHours();\r\n  console.log(hours);\r\n\r\n  const sunPosition = {\r\n    x:\r\n      hours >= 0 && hours < 6\r\n        ? 230 - (50 + hours * 7)\r\n        : hours > 7 && hours < 15\r\n        ? hours * 10\r\n        : hours * 6,\r\n    y:\r\n      hours >= 0 && hours <= 6\r\n        ? 100 - (50 + hours * 7)\r\n        : hours > 7 && hours < 15\r\n        ? hours * 10\r\n        : hours * 6,\r\n    z:\r\n      hours >= 0 && hours < 6\r\n        ? -230 + hours * 10\r\n        : hours > 7 && hours < 15\r\n        ? hours * -15\r\n        : hours * -10,\r\n  };\r\n\r\n  const sunColor =\r\n    (hours > 6 && hours < 10) || (hours > 18 && hours < 20)\r\n      ? \"orange\"\r\n      : hours > 22 || (hours >= 0 && hours < 6)\r\n      ? \"white\"\r\n      : \"0xffccaa\";\r\n\r\n  const rendererColor =\r\n    weatherType && (weatherType === \"fog\" || weatherType === \"smoke\")\r\n      ? \"ligthgrey\"\r\n      : (hours > 5 && hours < 10) || (hours > 18 && hours < 20)\r\n      ? \"orangered\"\r\n      : hours > 22 || (hours >= 0 && hours < 6)\r\n      ? \"darkblue\"\r\n      : \"lightblue\";\r\n\r\n  const scene = new THREE.Scene();\r\n  const camera = new THREE.PerspectiveCamera(\r\n    75,\r\n    window.innerWidth / window.innerHeight,\r\n    0.1,\r\n    1000\r\n  );\r\n\r\n  const renderer = new THREE.WebGLRenderer({\r\n    powerPreference: \"high-performance\",\r\n    antialias: false,\r\n    stencil: false,\r\n    depth: false,\r\n  });\r\n\r\n  renderer.setSize(window.innerWidth, window.innerHeight);\r\n  document.body.appendChild(renderer.domElement);\r\n\r\n  const geometry = new THREE.PlaneGeometry(50, 50, 199, 199);\r\n  const material = new THREE.MeshStandardMaterial({\r\n    color: new THREE.Color(\"rgb(10, 70, 50)\"),\r\n    colorWrite: true,\r\n  });\r\n\r\n  //SUN\r\n\r\n  const sunGeo = new THREE.CircleGeometry(10, 10, 300);\r\n  const sunMat = new THREE.MeshBasicMaterial({ color: sunColor });\r\n  const sun = new THREE.Mesh(sunGeo, sunMat);\r\n  sun.position.set(sunPosition.x, sunPosition.y, sunPosition.z);\r\n  sun.scale.setX(1.1);\r\n  scene.add(sun);\r\n\r\n  console.log(sun);\r\n\r\n  const godraysEffect = new GodRaysEffect(camera, sun, {\r\n    resolutionScale: 1,\r\n    density: 0.8,\r\n    decay: 0.95,\r\n    weight: 0.2,\r\n    samples: 100,\r\n  });\r\n\r\n  //SUNLIGTH\r\n\r\n  const sunLight = new THREE.DirectionalLight(sunColor, 1.5);\r\n  sunLight.position.set(sunPosition.x, sunPosition.y, sunPosition.z);\r\n  scene.add(sunLight);\r\n\r\n  const renderPass = new RenderPass(scene, camera);\r\n  const effectPass = new EffectPass(camera, godraysEffect);\r\n  effectPass.renderToScreen = true;\r\n  const composer = new EffectComposer(renderer);\r\n  composer.addPass(renderPass);\r\n  composer.addPass(effectPass);\r\n\r\n  console.log(geometry);\r\n\r\n  scene.background = new THREE.Color(new THREE.Color(rendererColor));\r\n  scene.fog = new THREE.FogExp2(new THREE.Color(rendererColor), 0.05);\r\n\r\n  const position = geometry.attributes.position;\r\n  position.usage = THREE.DynamicDrawUsage;\r\n\r\n  for (let i = 0; i < position.count; i++) {\r\n    const z = Math.random() * 3 * Math.sin(Math.random() / 2);\r\n    position.setZ(i, z);\r\n  }\r\n\r\n  camera.position.z = 5;\r\n\r\n  const plane = new THREE.Mesh(geometry, material);\r\n  scene.add(plane);\r\n\r\n  sunLight.target = plane;\r\n\r\n  plane.rotateX(250);\r\n  plane.position.z = -10;\r\n\r\n  //parametrics\r\n\r\n  class Precipitation {\r\n    constructor(type = \"rain\") {\r\n      const rainGeo = new THREE.SphereGeometry(0.03, 0.03, 0.03);\r\n      const rainMaterial = new THREE.MeshBasicMaterial({\r\n        color: \"white\",\r\n        transparent: true,\r\n      });\r\n\r\n      const rainCount = type === \"rain\" || type === \"snow\" ? 1500 : 3500;\r\n      const rain = new THREE.Object3D();\r\n\r\n      for (let i = 0; i < rainCount; i++) {\r\n        let rainDrop = new THREE.Mesh(rainGeo, rainMaterial);\r\n        rainDrop.position.set(\r\n          Math.random() * 50 - 25,\r\n          Math.random() * 30 - 15,\r\n          Math.random() * 30 - 35\r\n        );\r\n        rain.add(rainDrop);\r\n      }\r\n\r\n      rain.speed = type === \"rain\" ? 0.07 : type === \"snow\" ? 0.04 : 0.1;\r\n\r\n      return rain;\r\n    }\r\n  }\r\n\r\n  const precipitation = new Precipitation(weatherType);\r\n  (weatherType === \"rain\" ||\r\n    weatherType === \"drizzle\" ||\r\n    weatherType === \"snow\" ||\r\n    weatherType === \"thunderstorm\") &&\r\n    scene.add(precipitation);\r\n\r\n  const lightninig = new THREE.PointLight(\"rgba(30, 50, 150)\", 200, 100);\r\n  lightninig.position.set(0, 40, -60);\r\n  lightninig.visible = false;\r\n  weatherType === \"thunderstorm\" && scene.add(lightninig);\r\n\r\n  const clouds = new THREE.Object3D();\r\n\r\n  const loader = new THREE.TextureLoader();\r\n  loader.load(\"./cloud.png\", function (texture) {\r\n    const cloudGeo = new THREE.PlaneBufferGeometry(10, 10);\r\n    const cloudMaterial = new THREE.MeshLambertMaterial({\r\n      map: texture,\r\n      transparent: true,\r\n    });\r\n\r\n    for (let p = 0; p < 25; p++) {\r\n      const cloud = new THREE.Mesh(cloudGeo, cloudMaterial);\r\n      cloud.position.set(Math.random() * 60 - 30, 5, Math.random() * 5 - 5);\r\n      cloud.rotation.x = 1.3;\r\n      cloud.rotation.y = 0;\r\n      cloud.rotation.z = Math.random() * 360;\r\n      cloud.material.opacity = 0.8;\r\n      clouds.add(cloud);\r\n    }\r\n  });\r\n\r\n  clouds.rotation.x = 0.3;\r\n\r\n  (weatherType === \"clouds\" ||\r\n    weatherType === \"rain\" ||\r\n    weatherType === \"drizzle\" ||\r\n    weatherType === \"thunderstorm\") &&\r\n    scene.add(clouds);\r\n\r\n  const animate = function () {\r\n    window.requestAnimationFrame(animate);\r\n\r\n    precipitation.children.forEach((p) => {\r\n      p.position.y -= precipitation.speed + Math.random() * 0.03;\r\n\r\n      if (p.position.y < -10) {\r\n        p.position.y = 15;\r\n      }\r\n    });\r\n\r\n    if (Math.random() * 55 < 0.95 && Math.random() * 55 > 0.4) {\r\n      lightninig.position.setX(Math.floor(Math.random() * 60) - 30);\r\n      lightninig.visible = true;\r\n      lightninig.intensity = Math.floor(Math.random() * 50);\r\n    } else {\r\n      lightninig.visible = false;\r\n    }\r\n\r\n    plane.rotation.z += 0.001;\r\n\r\n    clouds.children.forEach((c) => {\r\n      c.position.z < -20 ? (c.position.z = -5) : (c.position.z -= 0.01);\r\n    });\r\n    // clouds.rotation.z += 0.001;\r\n\r\n    composer.render(0.1);\r\n  };\r\n\r\n  animate();\r\n\r\n  const mouseMoveHandler = (e) => {\r\n    camera.rotation.x = (e.pageY - window.innerHeight) / 10000;\r\n    camera.rotation.y = (e.pageX - window.innerWidth) / 10000;\r\n  };\r\n\r\n  listeners.mouseMoveHandler = mouseMoveHandler;\r\n\r\n  document.body.addEventListener(\"mousemove\", mouseMoveHandler);\r\n};\r\n\r\nexport default { initScene, listeners };\r\n","import React, { useState } from \"react\";\r\n\r\nimport { ArrowDownward, ArrowUpward } from \"@material-ui/icons\";\r\n\r\nconst Card = ({ wthr }) => {\r\n  const { name, wind, weather, main, sys, visibility, timezone } = wthr;\r\n\r\n  const [mode, setMode] = useState(\"demo\");\r\n  return (\r\n    <div className=\"card column\">\r\n      {mode === \"demo\" && (\r\n        <div className=\"row centered demo-wrapper\">\r\n          <h1>{name}</h1>\r\n          <div className=\"row\">\r\n            <div\r\n              className=\"row centered demo-weather-icon\"\r\n              style={{\r\n                background: `url(http://openweathermap.org/img/wn/${weather[0].icon}@2x.png)`,\r\n                backgroundSize: `cover`,\r\n              }}>\r\n              <h2>{main.temp.toFixed(1)} °C</h2>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n      {mode === \"full\" && (\r\n        <div className=\"full-data-wrapper column centered\">\r\n          <h1>{name}</h1>\r\n          <div className=\"row centered data-wrapper\">\r\n            <div className=\"column sub-info\">\r\n              <h3>Temperature</h3>\r\n              <span>temp: {main.temp.toFixed(1)} °C</span>\r\n              <span>feels like: {main.feels_like.toFixed(1)} °C</span>\r\n              <span>min: {main.temp_min.toFixed(1)} °C</span>\r\n              <span>max: {main.temp_max.toFixed(1)} °C</span>\r\n            </div>\r\n            <div className=\"divider-vertical\"></div>\r\n            <div className=\"column sub-info\">\r\n              <h3>Optional</h3>\r\n              <span>humidity: {main.humidity}</span>\r\n              <span>pressure: {main.pressure}</span>\r\n              <span>visibility: {visibility} m</span>\r\n            </div>\r\n            <div className=\"divider-vertical\"></div>\r\n            <div className=\"column sub-info\">\r\n              <h3>Sun activity</h3>\r\n              <span>\r\n                sunrise: {new Date(sys.sunrise * 1000).getHours()}:\r\n                {new Date(sys.sunrise * 1000).getMinutes()}\r\n              </span>\r\n              <span>\r\n                sunset: {new Date(sys.sunset * 1000).getHours()}:\r\n                {new Date(sys.sunset * 1000).getMinutes()}\r\n              </span>\r\n            </div>\r\n            <div className=\"divider-vertical\"></div>\r\n            <div className=\"column sub-info\">\r\n              <h3>Wind</h3>\r\n              <span>speed: {wind.speed}</span>\r\n              <span>deg: {wind.deg}</span>\r\n            </div>\r\n            <div className=\"divider-vertical\"></div>\r\n            <div className=\"column centered\">\r\n              <span>{weather[0].main}</span>\r\n              <img\r\n                src={`http://openweathermap.org/img/wn/${weather[0].icon}@2x.png`}\r\n                alt={name}\r\n              />\r\n              <span>{weather[0].description}</span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      <button\r\n        className=\"icon row centered\"\r\n        onClick={() => setMode(mode === \"demo\" ? \"full\" : \"demo\")}>\r\n        {mode === \"demo\" ? <ArrowDownward /> : <ArrowUpward />}\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n","import React, { useEffect, useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\n\nimport \"./animations.css\";\nimport \"./App.css\";\n\nimport Scene from \"./scene\";\nimport Card from \"./components/Card\";\n\nimport { Cloud, Search } from \"@material-ui/icons\";\n\nconst API_KEY = `6409ee75b6ffc020adb31a565296a4bb`;\n\nfunction App() {\n  const dispatch = useDispatch();\n\n  const weatherData = useSelector((store) => store.weatherData);\n  const searchVal = useSelector((store) => store.searchVal);\n\n  const [loading, setLoading] = useState(false);\n\n  const getWeather = (city) => {\n    setLoading(true);\n\n    fetch(\n      `https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${API_KEY}&units=metric`\n    )\n      .then((response) => {\n        console.log(response);\n        return response.json();\n      })\n      .then((weatherData) => {\n        setLoading(false);\n        if (weatherData.weather) {\n          dispatch({ type: \"INIT_WEATHER_DATA\", payload: weatherData });\n          Scene.initScene({\n            time: new Date(Date.now()),\n            weatherType: weatherData.weather[0].main.toLowerCase(),\n          });\n        } else {\n          dispatch({ type: \"INIT_WEATHER_DATA\", payload: { error: true } });\n        }\n      });\n  };\n\n  // initing three\n  useEffect(() => {\n    Scene.initScene({ time: new Date(Date.now()) });\n  }, []);\n\n  return (\n    <div className=\"app column centered\">\n      <h1>\n        <Cloud /> Hello\n      </h1>\n      <div className=\"column centered form\">\n        <div className=\"row centered\">\n          <input\n            type=\"text\"\n            onChange={(e) =>\n              dispatch({ type: \"CHANGE_SEARCHVAL\", payload: e.target.value })\n            }\n            value={searchVal}\n          />\n          <button\n            className=\"row icon centered search-btn\"\n            onClick={() => getWeather(searchVal)}>\n            <Search />\n          </button>\n        </div>\n      </div>\n      {loading && <h1>Loading</h1>}\n      {weatherData &&\n        (weatherData.error ? (\n          <h1>City is not found</h1>\n        ) : (\n          <Card wthr={weatherData} />\n        ))}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","const weatherDataReducer = (state = null, action) => {\r\n  switch (action.type) {\r\n    case \"INIT_WEATHER_DATA\":\r\n      return { ...action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default weatherDataReducer;\r\n","const searchValReducer = (state = \"\", action) => {\r\n  switch (action.type) {\r\n    case \"CHANGE_SEARCHVAL\":\r\n      return action.payload;\r\n    case \"CLEAR_SEARCHVAL\":\r\n      return \"\";\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default searchValReducer;\r\n","import { combineReducers } from \"redux\";\r\n\r\nimport weatherDataReducer from \"./weatherData\";\r\nimport searchValReducer from \"./searchVal\";\r\n\r\nconst allReducers = combineReducers({\r\n  weatherData: weatherDataReducer,\r\n  searchVal: searchValReducer,\r\n});\r\n\r\nexport default allReducers;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nimport { createStore } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport allReducers from \"./reducers\";\n\nconst store = createStore(\n  allReducers,\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n);\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\nreportWebVitals();\n"],"sourceRoot":""}